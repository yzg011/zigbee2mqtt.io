"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[33178],{2232:(e,t,a)=>{a.r(t),a.d(t,{data:()=>d});const d={key:"v-b1787d1a",path:"/devices/DTB190502A1.html",title:"databyte.ch DTB190502A1 control via MQTT",lang:"en-US",frontmatter:{title:"databyte.ch DTB190502A1 control via MQTT",description:"Integrate your databyte.ch DTB190502A1 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2019-09-08T21:16:00.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Led_state (binary)",slug:"led-state-binary",children:[]},{level:3,title:"Key_state (enum)",slug:"key-state-enum",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/DTB190502A1.md",git:{updatedTime:1661706754e3}}},55590:(e,t,a)=>{a.r(t),a.d(t,{default:()=>_});var d=a(66252);const l=(0,d._)("h1",{id:"databyte-ch-dtb190502a1",tabindex:"-1"},[(0,d._)("a",{class:"header-anchor",href:"#databyte-ch-dtb190502a1","aria-hidden":"true"},"#"),(0,d.Uk)(" databyte.ch DTB190502A1")],-1),i=(0,d._)("thead",null,[(0,d._)("tr",null,[(0,d._)("th"),(0,d._)("th")])],-1),n=(0,d._)("tr",null,[(0,d._)("td",null,"Model"),(0,d._)("td",null,"DTB190502A1")],-1),r=(0,d._)("tr",null,[(0,d._)("td",null,"Vendor"),(0,d._)("td",null,"databyte.ch")],-1),o=(0,d._)("td",null,"Description",-1),s={href:"https://databyte.ch/zigbee-dev-board-dtb190502a",target:"_blank",rel:"noopener noreferrer"},c=(0,d.Uk)("CC2530 based IO Board"),u=(0,d._)("tr",null,[(0,d._)("td",null,"Exposes"),(0,d._)("td",null,"led_state, key_state, linkquality")],-1),h=(0,d._)("tr",null,[(0,d._)("td",null,"Picture"),(0,d._)("td",null,[(0,d._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/DTB190502A1.jpg",alt:"databyte.ch DTB190502A1"})])],-1),b=(0,d.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="led-state-binary" tabindex="-1"><a class="header-anchor" href="#led-state-binary" aria-hidden="true">#</a> Led_state (binary)</h3><p>Value can be found in the published state on the <code>led_state</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>ON</code> led_state is ON, if <code>OFF</code> OFF.</p><h3 id="key-state-enum" tabindex="-1"><a class="header-anchor" href="#key-state-enum" aria-hidden="true">#</a> Key_state (enum)</h3><p>Value can be found in the published state on the <code>key_state</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>KEY_SYS</code>, <code>KEY_UP</code>, <code>KEY_DOWN</code>, <code>KEY_NONE</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',7),p={},_=(0,a(83744).Z)(p,[["render",function(e,t){const a=(0,d.up)("OutboundLink");return(0,d.wg)(),(0,d.iD)(d.HY,null,[l,(0,d._)("table",null,[i,(0,d._)("tbody",null,[n,r,(0,d._)("tr",null,[o,(0,d._)("td",null,[(0,d._)("a",s,[c,(0,d.Wm)(a)])])]),u,h])]),b],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[a,d]of t)e[a]=d;return e}}}]);