"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[51485],{73873:(e,t,i)=>{i.r(t),i.d(t,{data:()=>o});const o={key:"v-8e043308",path:"/devices/DNCKATSW001.html",title:"Custom devices (DiY) DNCKATSW001 control via MQTT",lang:"en-US",frontmatter:{title:"Custom devices (DiY) DNCKATSW001 control via MQTT",description:"Integrate your Custom devices (DiY) DNCKATSW001 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2019-07-22T20:08:17.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Switch",slug:"switch",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/DNCKATSW001.md",git:{updatedTime:1661706754e3}}},23893:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var o=i(66252);const d=(0,o._)("h1",{id:"custom-devices-diy-dnckatsw001",tabindex:"-1"},[(0,o._)("a",{class:"header-anchor",href:"#custom-devices-diy-dnckatsw001","aria-hidden":"true"},"#"),(0,o.Uk)(" Custom devices (DiY) DNCKATSW001")],-1),s=(0,o._)("thead",null,[(0,o._)("tr",null,[(0,o._)("th"),(0,o._)("th")])],-1),l=(0,o._)("tr",null,[(0,o._)("td",null,"Model"),(0,o._)("td",null,"DNCKATSW001")],-1),a=(0,o._)("tr",null,[(0,o._)("td",null,"Vendor"),(0,o._)("td",null,"Custom devices (DiY)")],-1),u=(0,o._)("td",null,"Description",-1),n={href:"https://github.com/dzungpv/dnckatsw00x/",target:"_blank",rel:"noopener noreferrer"},c=(0,o.Uk)("DNCKAT single key wired wall light switch"),r=(0,o._)("tr",null,[(0,o._)("td",null,"Exposes"),(0,o._)("td",null,"switch (state), linkquality")],-1),h=(0,o._)("tr",null,[(0,o._)("td",null,"Picture"),(0,o._)("td",null,[(0,o._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/DNCKATSW001.jpg",alt:"Custom devices (DiY) DNCKATSW001"})])],-1),p=(0,o.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> Switch</h3><p>The current state of this switch is in the published state under the <code>state</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',5),m={},v=(0,i(83744).Z)(m,[["render",function(e,t){const i=(0,o.up)("OutboundLink");return(0,o.wg)(),(0,o.iD)(o.HY,null,[d,(0,o._)("table",null,[s,(0,o._)("tbody",null,[l,a,(0,o._)("tr",null,[u,(0,o._)("td",null,[(0,o._)("a",n,[c,(0,o.Wm)(i)])])]),r,h])]),p],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[i,o]of t)e[i]=o;return e}}}]);