"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[68586],{67054:(e,t,i)=>{i.r(t),i.d(t,{data:()=>r});const r={key:"v-aea15f1a",path:"/devices/CC2538.ROUTER.V2.html",title:"Custom devices (DiY) CC2538.ROUTER.V2 control via MQTT",lang:"en-US",frontmatter:{title:"Custom devices (DiY) CC2538.ROUTER.V2 control via MQTT",description:"Integrate your Custom devices (DiY) CC2538.ROUTER.V2 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2021-03-10T22:18:54.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Device_temperature (numeric)",slug:"device-temperature-numeric",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/CC2538.ROUTER.V2.md",git:{updatedTime:1661706754e3}}},90474:(e,t,i)=>{i.r(t),i.d(t,{default:()=>v});var r=i(66252);const a=(0,r._)("h1",{id:"custom-devices-diy-cc2538-router-v2",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#custom-devices-diy-cc2538-router-v2","aria-hidden":"true"},"#"),(0,r.Uk)(" Custom devices (DiY) CC2538.ROUTER.V2")],-1),l=(0,r._)("thead",null,[(0,r._)("tr",null,[(0,r._)("th"),(0,r._)("th")])],-1),u=(0,r._)("tr",null,[(0,r._)("td",null,"Model"),(0,r._)("td",null,"CC2538.ROUTER.V2")],-1),d=(0,r._)("tr",null,[(0,r._)("td",null,"Vendor"),(0,r._)("td",null,"Custom devices (DiY)")],-1),n=(0,r._)("td",null,"Description",-1),c={href:"https://github.com/jethome-ru/zigbee-firmware/tree/master/ti/router/cc2538_cc2592",target:"_blank",rel:"noopener noreferrer"},o=(0,r.Uk)("MODKAM stick СС2538 router with temperature sensor"),s=(0,r._)("tr",null,[(0,r._)("td",null,"Exposes"),(0,r._)("td",null,"device_temperature, linkquality")],-1),h=(0,r._)("tr",null,[(0,r._)("td",null,"Picture"),(0,r._)("td",null,[(0,r._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/CC2538.ROUTER.V2.jpg",alt:"Custom devices (DiY) CC2538.ROUTER.V2"})])],-1),m=(0,r.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="device-temperature-numeric" tabindex="-1"><a class="header-anchor" href="#device-temperature-numeric" aria-hidden="true">#</a> Device_temperature (numeric)</h3><p>Temperature of the device. Value can be found in the published state on the <code>device_temperature</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',5),p={},v=(0,i(83744).Z)(p,[["render",function(e,t){const i=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[a,(0,r._)("table",null,[l,(0,r._)("tbody",null,[u,d,(0,r._)("tr",null,[n,(0,r._)("td",null,[(0,r._)("a",c,[o,(0,r.Wm)(i)])])]),s,h])]),m],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[i,r]of t)e[i]=r;return e}}}]);