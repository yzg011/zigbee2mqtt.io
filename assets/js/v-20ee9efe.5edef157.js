"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[64756],{54310:(e,t,a)=>{a.r(t),a.d(t,{data:()=>n});const n={key:"v-20ee9efe",path:"/devices/DIYRuZ_magnet.html",title:"DIYRuZ DIYRuZ_magnet control via MQTT",lang:"en-US",frontmatter:{title:"DIYRuZ DIYRuZ_magnet control via MQTT",description:"Integrate your DIYRuZ DIYRuZ_magnet via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2019-11-09T18:37:38.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Battery (numeric)",slug:"battery-numeric",children:[]},{level:3,title:"Contact (binary)",slug:"contact-binary",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/DIYRuZ_magnet.md",git:{updatedTime:1661706754e3}}},36240:(e,t,a)=>{a.r(t),a.d(t,{default:()=>g});var n=a(66252);const i=(0,n._)("h1",{id:"diyruz-diyruz-magnet",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#diyruz-diyruz-magnet","aria-hidden":"true"},"#"),(0,n.Uk)(" DIYRuZ DIYRuZ_magnet")],-1),r=(0,n._)("thead",null,[(0,n._)("tr",null,[(0,n._)("th"),(0,n._)("th")])],-1),l=(0,n._)("tr",null,[(0,n._)("td",null,"Model"),(0,n._)("td",null,"DIYRuZ_magnet")],-1),d=(0,n._)("tr",null,[(0,n._)("td",null,"Vendor"),(0,n._)("td",null,"DIYRuZ")],-1),u=(0,n._)("td",null,"Description",-1),o={href:"https://modkam.ru/?p=1220",target:"_blank",rel:"noopener noreferrer"},c=(0,n.Uk)("DIYRuZ contact sensor"),s=(0,n._)("tr",null,[(0,n._)("td",null,"Exposes"),(0,n._)("td",null,"battery, contact, linkquality")],-1),h=(0,n._)("tr",null,[(0,n._)("td",null,"Picture"),(0,n._)("td",null,[(0,n._)("img",{src:"https://www.zigbee2mqtt.io/images/devices/DIYRuZ_magnet.jpg",alt:"DIYRuZ DIYRuZ_magnet"})])],-1),m=(0,n.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric" aria-hidden="true">#</a> Battery (numeric)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary" aria-hidden="true">#</a> Contact (binary)</h3><p>Indicates if the contact is closed (= true) or open (= false). Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',7),p={},g=(0,a(83744).Z)(p,[["render",function(e,t){const a=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[i,(0,n._)("table",null,[r,(0,n._)("tbody",null,[l,d,(0,n._)("tr",null,[u,(0,n._)("td",null,[(0,n._)("a",o,[c,(0,n.Wm)(a)])])]),s,h])]),m],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[a,n]of t)e[a]=n;return e}}}]);