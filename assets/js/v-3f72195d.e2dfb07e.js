"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[9021],{76230:(e,t,o)=>{o.r(t),o.d(t,{data:()=>i});const i={key:"v-3f72195d",path:"/devices/ALCANTARA2.html",title:"Acova ALCANTARA2 control via MQTT",lang:"en-US",frontmatter:{title:"Acova ALCANTARA2 control via MQTT",description:"Integrate your Acova ALCANTARA2 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2022-02-01T18:08:24.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Notes",slug:"notes",children:[{level:3,title:"Pairing",slug:"pairing",children:[]}]},{level:2,title:"Options",slug:"options",children:[]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Climate",slug:"climate",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/ALCANTARA2.md",git:{updatedTime:1661706754e3}}},13832:(e,t,o)=>{o.r(t),o.d(t,{default:()=>r});var i=o(66252);const d=(0,i.uE)('<h1 id="acova-alcantara2" tabindex="-1"><a class="header-anchor" href="#acova-alcantara2" aria-hidden="true">#</a> Acova ALCANTARA2</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>ALCANTARA2</td></tr><tr><td>Vendor</td><td>Acova</td></tr><tr><td>Description</td><td>Alcantara 2 heater</td></tr><tr><td>Exposes</td><td>climate (occupied_heating_setpoint, local_temperature, system_mode, running_state), linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/ALCANTARA2.jpg" alt="Acova ALCANTARA2"></td></tr></tbody></table><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><h3 id="pairing" tabindex="-1"><a class="header-anchor" href="#pairing" aria-hidden="true">#</a> Pairing</h3><ul><li>Press and hold the <code>Mode</code> button to enter configuration mode</li><li>If already paired with the Enki box, press and hold the <code>-</code> (minus) button until <code>Off</code> is displayed (you&#39;ll probably also have to first remove the heater from the Enki box using the dedicated app)</li><li>Press and hold the <code>+</code> (plus) button until a code appears on the screen (this is a pairing code used with the Enki box app we don&#39;t use here)</li><li>Turn on pairing mode in zigbee2mqtt</li><li>Press (and sometimes hold) the <code>+</code> button until a &quot;progress bar&quot; appears on the screen</li><li>Wait for pairing. The device should show up in zigbee2mqtt in a few seconds and the screen should now display <code>On</code></li><li>Press and hold the <code>Mode</code> button to leave configuration mode (or wait for ~ 30 sec to 1 minute). The device should now display &quot;Box&quot; on the top right corner of the screen and the temperature setpoint</li></ul><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2>',6),a=(0,i.Uk)("How to use device type specific configuration"),c=(0,i.uE)('<ul><li><code>thermostat_unit</code>: Controls the temperature unit of the thermostat (default celsius). The value must be one of <code>celsius</code>, <code>fahrenheit</code></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="climate" tabindex="-1"><a class="header-anchor" href="#climate" aria-hidden="true">#</a> Climate</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>system_mode</code>, <code>running_state</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>7</code> and <code>28</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>off</code>, <code>heat</code>, <code>auto</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state&quot;: &quot;&quot;}</code>.</li></ul><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',7),n={},r=(0,o(83744).Z)(n,[["render",function(e,t){const o=(0,i.up)("RouterLink");return(0,i.wg)(),(0,i.iD)(i.HY,null,[d,(0,i._)("p",null,[(0,i._)("em",null,[(0,i.Wm)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,i.w5)((()=>[a])),_:1})])]),c],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[o,i]of t)e[o]=i;return e}}}]);