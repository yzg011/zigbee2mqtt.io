"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[93680],{22886:(e,t,a)=>{a.r(t),a.d(t,{data:()=>r});const r={key:"v-0ba5c772",path:"/devices/SW600.html",title:"Salus Controls SW600 control via MQTT",lang:"en-US",frontmatter:{title:"Salus Controls SW600 control via MQTT",description:"Integrate your Salus Controls SW600 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2020-12-01T19:02:25.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"OTA updates",slug:"ota-updates",children:[]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Contact (binary)",slug:"contact-binary",children:[]},{level:3,title:"Battery_low (binary)",slug:"battery-low-binary",children:[]},{level:3,title:"Tamper (binary)",slug:"tamper-binary",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/SW600.md",git:{updatedTime:1661706754e3}}},46760:(e,t,a)=>{a.r(t),a.d(t,{default:()=>c});var r=a(66252);const o=(0,r.uE)('<h1 id="salus-controls-sw600" tabindex="-1"><a class="header-anchor" href="#salus-controls-sw600" aria-hidden="true">#</a> Salus Controls SW600</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>SW600</td></tr><tr><td>Vendor</td><td>Salus Controls</td></tr><tr><td>Description</td><td>Door or window contact sensor</td></tr><tr><td>Exposes</td><td>contact, battery_low, tamper, linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/SW600.jpg" alt="Salus Controls SW600"></td></tr></tbody></table><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates" aria-hidden="true">#</a> OTA updates</h2>',3),i=(0,r.Uk)("This device supports OTA updates, for more information see "),d=(0,r.Uk)("OTA updates"),s=(0,r.Uk)("."),n=(0,r.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="contact-binary" tabindex="-1"><a class="header-anchor" href="#contact-binary" aria-hidden="true">#</a> Contact (binary)</h3><p>Indicates if the contact is closed (= true) or open (= false). Value can be found in the published state on the <code>contact</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>false</code> contact is ON, if <code>true</code> OFF.</p><h3 id="battery-low-binary" tabindex="-1"><a class="header-anchor" href="#battery-low-binary" aria-hidden="true">#</a> Battery_low (binary)</h3><p>Indicates if the battery of this device is almost empty. Value can be found in the published state on the <code>battery_low</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> battery_low is ON, if <code>false</code> OFF.</p><h3 id="tamper-binary" tabindex="-1"><a class="header-anchor" href="#tamper-binary" aria-hidden="true">#</a> Tamper (binary)</h3><p>Indicates whether the device is tampered. Value can be found in the published state on the <code>tamper</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. If value equals <code>true</code> tamper is ON, if <code>false</code> OFF.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',9),l={},c=(0,a(83744).Z)(l,[["render",function(e,t){const a=(0,r.up)("RouterLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[o,(0,r._)("p",null,[i,(0,r.Wm)(a,{to:"/guide/usage/ota_updates.html"},{default:(0,r.w5)((()=>[d])),_:1}),s]),n],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[a,r]of t)e[a]=r;return e}}}]);