"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[13797],{66819:(e,t,i)=>{i.r(t),i.d(t,{data:()=>d});const d={key:"v-7f8d3484",path:"/devices/929003017102.html",title:"Philips 929003017102 control via MQTT",lang:"en-US",frontmatter:{title:"Philips 929003017102 control via MQTT",description:"Integrate your Philips 929003017102 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2021-03-30T20:29:35.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Battery (numeric)",slug:"battery-numeric",children:[]},{level:3,title:"Action (enum)",slug:"action-enum",children:[]},{level:3,title:"Device_mode (enum)",slug:"device-mode-enum",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/929003017102.md",git:{updatedTime:1661706754e3}}},68906:(e,t,i)=>{i.r(t),i.d(t,{default:()=>a});const d=(0,i(66252).uE)('<h1 id="philips-929003017102" tabindex="-1"><a class="header-anchor" href="#philips-929003017102" aria-hidden="true">#</a> Philips 929003017102</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>929003017102</td></tr><tr><td>Vendor</td><td>Philips</td></tr><tr><td>Description</td><td>Hue wall switch module</td></tr><tr><td>Exposes</td><td>battery, action, device_mode, linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/929003017102.jpg" alt="Philips 929003017102"></td></tr></tbody></table><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric" aria-hidden="true">#</a> Battery (numeric)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum" aria-hidden="true">#</a> Action (enum)</h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>left_press</code>, <code>left_press_release</code>, <code>right_press</code>, <code>right_press_release</code>.</p><h3 id="device-mode-enum" tabindex="-1"><a class="header-anchor" href="#device-mode-enum" aria-hidden="true">#</a> Device_mode (enum)</h3><p>Value can be found in the published state on the <code>device_mode</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;device_mode&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;device_mode&quot;: NEW_VALUE}</code>. The possible values are: <code>single_rocker</code>, <code>single_push_button</code>, <code>dual_rocker</code>, <code>dual_push_button</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',11),o={},a=(0,i(83744).Z)(o,[["render",function(e,t){return d}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[i,d]of t)e[i]=d;return e}}}]);