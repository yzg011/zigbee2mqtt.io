"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[92475],{25791:(e,t,o)=>{o.r(t),o.d(t,{data:()=>i});const i={key:"v-4d920755",path:"/devices/Icon.html",title:"Danfoss Icon control via MQTT",lang:"en-US",frontmatter:{title:"Danfoss Icon control via MQTT",description:"Integrate your Danfoss Icon via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor's bridge or gateway.",addedAt:"2021-10-30T12:58:50.000Z",pageClass:"device-page"},excerpt:"",headers:[{level:2,title:"Options",slug:"options",children:[]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Battery (numeric, l1 endpoint)",slug:"battery-numeric-l1-endpoint",children:[]},{level:3,title:"Climate (l1 endpoint)",slug:"climate-l1-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l1 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l1-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l1 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l1-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l1 endpoint)",slug:"min-heat-setpoint-limit-numeric-l1-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l1 endpoint)",slug:"max-heat-setpoint-limit-numeric-l1-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l1 endpoint)",slug:"setpoint-change-source-enum-l1-endpoint",children:[]},{level:3,title:"Output_status (enum, l1 endpoint)",slug:"output-status-enum-l1-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l1 endpoint)",slug:"room-status-code-enum-l1-endpoint",children:[]},{level:3,title:"Battery (numeric, l2 endpoint)",slug:"battery-numeric-l2-endpoint",children:[]},{level:3,title:"Climate (l2 endpoint)",slug:"climate-l2-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l2 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l2-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l2 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l2-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l2 endpoint)",slug:"min-heat-setpoint-limit-numeric-l2-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l2 endpoint)",slug:"max-heat-setpoint-limit-numeric-l2-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l2 endpoint)",slug:"setpoint-change-source-enum-l2-endpoint",children:[]},{level:3,title:"Output_status (enum, l2 endpoint)",slug:"output-status-enum-l2-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l2 endpoint)",slug:"room-status-code-enum-l2-endpoint",children:[]},{level:3,title:"Battery (numeric, l3 endpoint)",slug:"battery-numeric-l3-endpoint",children:[]},{level:3,title:"Climate (l3 endpoint)",slug:"climate-l3-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l3 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l3-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l3 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l3-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l3 endpoint)",slug:"min-heat-setpoint-limit-numeric-l3-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l3 endpoint)",slug:"max-heat-setpoint-limit-numeric-l3-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l3 endpoint)",slug:"setpoint-change-source-enum-l3-endpoint",children:[]},{level:3,title:"Output_status (enum, l3 endpoint)",slug:"output-status-enum-l3-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l3 endpoint)",slug:"room-status-code-enum-l3-endpoint",children:[]},{level:3,title:"Battery (numeric, l4 endpoint)",slug:"battery-numeric-l4-endpoint",children:[]},{level:3,title:"Climate (l4 endpoint)",slug:"climate-l4-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l4 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l4-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l4 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l4-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l4 endpoint)",slug:"min-heat-setpoint-limit-numeric-l4-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l4 endpoint)",slug:"max-heat-setpoint-limit-numeric-l4-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l4 endpoint)",slug:"setpoint-change-source-enum-l4-endpoint",children:[]},{level:3,title:"Output_status (enum, l4 endpoint)",slug:"output-status-enum-l4-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l4 endpoint)",slug:"room-status-code-enum-l4-endpoint",children:[]},{level:3,title:"Battery (numeric, l5 endpoint)",slug:"battery-numeric-l5-endpoint",children:[]},{level:3,title:"Climate (l5 endpoint)",slug:"climate-l5-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l5 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l5-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l5 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l5-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l5 endpoint)",slug:"min-heat-setpoint-limit-numeric-l5-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l5 endpoint)",slug:"max-heat-setpoint-limit-numeric-l5-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l5 endpoint)",slug:"setpoint-change-source-enum-l5-endpoint",children:[]},{level:3,title:"Output_status (enum, l5 endpoint)",slug:"output-status-enum-l5-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l5 endpoint)",slug:"room-status-code-enum-l5-endpoint",children:[]},{level:3,title:"Battery (numeric, l6 endpoint)",slug:"battery-numeric-l6-endpoint",children:[]},{level:3,title:"Climate (l6 endpoint)",slug:"climate-l6-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l6 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l6-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l6 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l6-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l6 endpoint)",slug:"min-heat-setpoint-limit-numeric-l6-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l6 endpoint)",slug:"max-heat-setpoint-limit-numeric-l6-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l6 endpoint)",slug:"setpoint-change-source-enum-l6-endpoint",children:[]},{level:3,title:"Output_status (enum, l6 endpoint)",slug:"output-status-enum-l6-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l6 endpoint)",slug:"room-status-code-enum-l6-endpoint",children:[]},{level:3,title:"Battery (numeric, l7 endpoint)",slug:"battery-numeric-l7-endpoint",children:[]},{level:3,title:"Climate (l7 endpoint)",slug:"climate-l7-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l7 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l7-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l7 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l7-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l7 endpoint)",slug:"min-heat-setpoint-limit-numeric-l7-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l7 endpoint)",slug:"max-heat-setpoint-limit-numeric-l7-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l7 endpoint)",slug:"setpoint-change-source-enum-l7-endpoint",children:[]},{level:3,title:"Output_status (enum, l7 endpoint)",slug:"output-status-enum-l7-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l7 endpoint)",slug:"room-status-code-enum-l7-endpoint",children:[]},{level:3,title:"Battery (numeric, l8 endpoint)",slug:"battery-numeric-l8-endpoint",children:[]},{level:3,title:"Climate (l8 endpoint)",slug:"climate-l8-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l8 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l8-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l8 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l8-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l8 endpoint)",slug:"min-heat-setpoint-limit-numeric-l8-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l8 endpoint)",slug:"max-heat-setpoint-limit-numeric-l8-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l8 endpoint)",slug:"setpoint-change-source-enum-l8-endpoint",children:[]},{level:3,title:"Output_status (enum, l8 endpoint)",slug:"output-status-enum-l8-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l8 endpoint)",slug:"room-status-code-enum-l8-endpoint",children:[]},{level:3,title:"Battery (numeric, l9 endpoint)",slug:"battery-numeric-l9-endpoint",children:[]},{level:3,title:"Climate (l9 endpoint)",slug:"climate-l9-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l9 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l9-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l9 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l9-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l9 endpoint)",slug:"min-heat-setpoint-limit-numeric-l9-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l9 endpoint)",slug:"max-heat-setpoint-limit-numeric-l9-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l9 endpoint)",slug:"setpoint-change-source-enum-l9-endpoint",children:[]},{level:3,title:"Output_status (enum, l9 endpoint)",slug:"output-status-enum-l9-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l9 endpoint)",slug:"room-status-code-enum-l9-endpoint",children:[]},{level:3,title:"Battery (numeric, l10 endpoint)",slug:"battery-numeric-l10-endpoint",children:[]},{level:3,title:"Climate (l10 endpoint)",slug:"climate-l10-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l10 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l10-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l10 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l10-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l10 endpoint)",slug:"min-heat-setpoint-limit-numeric-l10-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l10 endpoint)",slug:"max-heat-setpoint-limit-numeric-l10-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l10 endpoint)",slug:"setpoint-change-source-enum-l10-endpoint",children:[]},{level:3,title:"Output_status (enum, l10 endpoint)",slug:"output-status-enum-l10-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l10 endpoint)",slug:"room-status-code-enum-l10-endpoint",children:[]},{level:3,title:"Battery (numeric, l11 endpoint)",slug:"battery-numeric-l11-endpoint",children:[]},{level:3,title:"Climate (l11 endpoint)",slug:"climate-l11-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l11 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l11-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l11 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l11-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l11 endpoint)",slug:"min-heat-setpoint-limit-numeric-l11-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l11 endpoint)",slug:"max-heat-setpoint-limit-numeric-l11-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l11 endpoint)",slug:"setpoint-change-source-enum-l11-endpoint",children:[]},{level:3,title:"Output_status (enum, l11 endpoint)",slug:"output-status-enum-l11-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l11 endpoint)",slug:"room-status-code-enum-l11-endpoint",children:[]},{level:3,title:"Battery (numeric, l12 endpoint)",slug:"battery-numeric-l12-endpoint",children:[]},{level:3,title:"Climate (l12 endpoint)",slug:"climate-l12-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l12 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l12-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l12 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l12-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l12 endpoint)",slug:"min-heat-setpoint-limit-numeric-l12-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l12 endpoint)",slug:"max-heat-setpoint-limit-numeric-l12-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l12 endpoint)",slug:"setpoint-change-source-enum-l12-endpoint",children:[]},{level:3,title:"Output_status (enum, l12 endpoint)",slug:"output-status-enum-l12-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l12 endpoint)",slug:"room-status-code-enum-l12-endpoint",children:[]},{level:3,title:"Battery (numeric, l13 endpoint)",slug:"battery-numeric-l13-endpoint",children:[]},{level:3,title:"Climate (l13 endpoint)",slug:"climate-l13-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l13 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l13-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l13 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l13-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l13 endpoint)",slug:"min-heat-setpoint-limit-numeric-l13-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l13 endpoint)",slug:"max-heat-setpoint-limit-numeric-l13-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l13 endpoint)",slug:"setpoint-change-source-enum-l13-endpoint",children:[]},{level:3,title:"Output_status (enum, l13 endpoint)",slug:"output-status-enum-l13-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l13 endpoint)",slug:"room-status-code-enum-l13-endpoint",children:[]},{level:3,title:"Battery (numeric, l14 endpoint)",slug:"battery-numeric-l14-endpoint",children:[]},{level:3,title:"Climate (l14 endpoint)",slug:"climate-l14-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l14 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l14-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l14 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l14-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l14 endpoint)",slug:"min-heat-setpoint-limit-numeric-l14-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l14 endpoint)",slug:"max-heat-setpoint-limit-numeric-l14-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l14 endpoint)",slug:"setpoint-change-source-enum-l14-endpoint",children:[]},{level:3,title:"Output_status (enum, l14 endpoint)",slug:"output-status-enum-l14-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l14 endpoint)",slug:"room-status-code-enum-l14-endpoint",children:[]},{level:3,title:"Battery (numeric, l15 endpoint)",slug:"battery-numeric-l15-endpoint",children:[]},{level:3,title:"Climate (l15 endpoint)",slug:"climate-l15-endpoint",children:[]},{level:3,title:"Abs_min_heat_setpoint_limit (numeric, l15 endpoint)",slug:"abs-min-heat-setpoint-limit-numeric-l15-endpoint",children:[]},{level:3,title:"Abs_max_heat_setpoint_limit (numeric, l15 endpoint)",slug:"abs-max-heat-setpoint-limit-numeric-l15-endpoint",children:[]},{level:3,title:"Min_heat_setpoint_limit (numeric, l15 endpoint)",slug:"min-heat-setpoint-limit-numeric-l15-endpoint",children:[]},{level:3,title:"Max_heat_setpoint_limit (numeric, l15 endpoint)",slug:"max-heat-setpoint-limit-numeric-l15-endpoint",children:[]},{level:3,title:"Setpoint_change_source (enum, l15 endpoint)",slug:"setpoint-change-source-enum-l15-endpoint",children:[]},{level:3,title:"Output_status (enum, l15 endpoint)",slug:"output-status-enum-l15-endpoint",children:[]},{level:3,title:"Room_status_code (enum, l15 endpoint)",slug:"room-status-code-enum-l15-endpoint",children:[]},{level:3,title:"System_status_code (enum, l16 endpoint)",slug:"system-status-code-enum-l16-endpoint",children:[]},{level:3,title:"System_status_water (enum, l16 endpoint)",slug:"system-status-water-enum-l16-endpoint",children:[]},{level:3,title:"Multimaster_role (enum, l16 endpoint)",slug:"multimaster-role-enum-l16-endpoint",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/Icon.md",git:{updatedTime:1661706754e3}}},19076:(e,t,o)=>{o.r(t),o.d(t,{default:()=>s});var i=o(66252);const d=(0,i.uE)('<h1 id="danfoss-icon" tabindex="-1"><a class="header-anchor" href="#danfoss-icon" aria-hidden="true">#</a> Danfoss Icon</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>Icon</td></tr><tr><td>Vendor</td><td>Danfoss</td></tr><tr><td>Description</td><td>Icon floor heating (regulator, Zigbee module &amp; thermostats)</td></tr><tr><td>Exposes</td><td>battery, climate (occupied_heating_setpoint, local_temperature, running_state, system_mode), abs_min_heat_setpoint_limit, abs_max_heat_setpoint_limit, min_heat_setpoint_limit, max_heat_setpoint_limit, setpoint_change_source, output_status, room_status_code, system_status_code, system_status_water, multimaster_role, linkquality</td></tr><tr><td>Picture</td><td><img src="https://www.zigbee2mqtt.io/images/devices/Icon.jpg" alt="Danfoss Icon"></td></tr></tbody></table><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h2>',3),n=(0,i.Uk)("How to use device type specific configuration"),a=(0,i.uE)('<ul><li><code>thermostat_unit</code>: Controls the temperature unit of the thermostat (default celsius). The value must be one of <code>celsius</code>, <code>fahrenheit</code></li></ul><h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="battery-numeric-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l1-endpoint" aria-hidden="true">#</a> Battery (numeric, l1 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l1-endpoint" aria-hidden="true">#</a> Climate (l1 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l1&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l1&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l1&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l1&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l1&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l1&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l1-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l1 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l1-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l1 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l1-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l1 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l1&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l1-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l1 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l1&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l1&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l1-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l1 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l1</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l1-endpoint" aria-hidden="true">#</a> Output_status (enum, l1 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l1&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l1-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l1-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l1 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l1</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l1&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l2-endpoint" aria-hidden="true">#</a> Battery (numeric, l2 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l2-endpoint" aria-hidden="true">#</a> Climate (l2 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l2&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l2&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l2&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l2&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l2&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l2&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l2-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l2 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l2-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l2 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l2-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l2 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l2&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l2-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l2 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l2&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l2&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l2-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l2 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l2</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l2-endpoint" aria-hidden="true">#</a> Output_status (enum, l2 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l2&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l2-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l2-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l2 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l2</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l2&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l3-endpoint" aria-hidden="true">#</a> Battery (numeric, l3 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l3</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l3-endpoint" aria-hidden="true">#</a> Climate (l3 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l3&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l3&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l3&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l3&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l3&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l3&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l3-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l3 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l3</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l3-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l3 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l3</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l3-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l3 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l3&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l3-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l3 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l3&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l3&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l3-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l3 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l3</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l3-endpoint" aria-hidden="true">#</a> Output_status (enum, l3 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l3&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l3-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l3-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l3 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l3</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l3&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l4-endpoint" aria-hidden="true">#</a> Battery (numeric, l4 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l4</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l4-endpoint" aria-hidden="true">#</a> Climate (l4 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l4&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l4&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l4&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l4&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l4&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l4&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l4-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l4 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l4</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l4-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l4 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l4</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l4-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l4 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l4&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l4-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l4 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l4&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l4&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l4-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l4 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l4</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l4-endpoint" aria-hidden="true">#</a> Output_status (enum, l4 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l4&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l4-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l4-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l4 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l4</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l4&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l5-endpoint" aria-hidden="true">#</a> Battery (numeric, l5 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l5</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l5-endpoint" aria-hidden="true">#</a> Climate (l5 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l5&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l5&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l5&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l5&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l5&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l5&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l5-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l5 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l5</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l5-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l5 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l5</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l5-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l5 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l5&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l5-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l5 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l5&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l5&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l5-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l5 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l5</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l5-endpoint" aria-hidden="true">#</a> Output_status (enum, l5 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l5&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l5-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l5-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l5 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l5</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l5&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l6-endpoint" aria-hidden="true">#</a> Battery (numeric, l6 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l6</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l6-endpoint" aria-hidden="true">#</a> Climate (l6 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l6&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l6&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l6&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l6&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l6&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l6&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l6-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l6 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l6</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l6-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l6 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l6</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l6-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l6 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l6&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l6&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l6-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l6 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l6&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l6&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l6-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l6 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l6</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l6-endpoint" aria-hidden="true">#</a> Output_status (enum, l6 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l6&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l6-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l6-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l6 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l6</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l6&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l7-endpoint" aria-hidden="true">#</a> Battery (numeric, l7 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l7</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l7-endpoint" aria-hidden="true">#</a> Climate (l7 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l7&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l7&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l7&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l7&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l7&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l7&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l7-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l7 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l7</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l7-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l7 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l7</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l7-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l7 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l7&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l7&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l7-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l7 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l7&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l7&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l7-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l7 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l7</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l7-endpoint" aria-hidden="true">#</a> Output_status (enum, l7 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l7&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l7-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l7-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l7 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l7</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l7&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l8-endpoint" aria-hidden="true">#</a> Battery (numeric, l8 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l8</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l8-endpoint" aria-hidden="true">#</a> Climate (l8 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l8&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l8&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l8&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l8&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l8&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l8&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l8-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l8 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l8</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l8-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l8 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l8</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l8-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l8 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l8&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l8-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l8 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l8&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l8&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l8-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l8 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l8</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l8-endpoint" aria-hidden="true">#</a> Output_status (enum, l8 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l8&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l8-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l8-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l8 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l8</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l8&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l9-endpoint" aria-hidden="true">#</a> Battery (numeric, l9 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l9</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l9-endpoint" aria-hidden="true">#</a> Climate (l9 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l9&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l9&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l9&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l9&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l9&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l9&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l9-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l9 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l9</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l9-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l9 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l9</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l9-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l9 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l9</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l9&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l9&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l9-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l9 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l9</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l9&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l9&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l9-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l9 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l9</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l9-endpoint" aria-hidden="true">#</a> Output_status (enum, l9 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l9</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l9&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l9-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l9-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l9 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l9</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l9&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l10-endpoint" aria-hidden="true">#</a> Battery (numeric, l10 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l10</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l10-endpoint" aria-hidden="true">#</a> Climate (l10 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l10&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l10&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l10&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l10&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l10&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l10&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l10-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l10 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l10</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l10-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l10 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l10</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l10-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l10 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l10</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l10&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l10&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l10-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l10 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l10</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l10&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l10&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l10-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l10 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l10</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l10-endpoint" aria-hidden="true">#</a> Output_status (enum, l10 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l10</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l10&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l10-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l10-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l10 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l10</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l10&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l11-endpoint" aria-hidden="true">#</a> Battery (numeric, l11 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l11</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l11-endpoint" aria-hidden="true">#</a> Climate (l11 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l11&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l11&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l11&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l11&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l11&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l11&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l11-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l11 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l11</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l11-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l11 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l11</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l11-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l11 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l11</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l11&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l11&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l11-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l11 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l11</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l11&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l11&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l11-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l11 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l11</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l11-endpoint" aria-hidden="true">#</a> Output_status (enum, l11 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l11</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l11&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l11-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l11-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l11 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l11</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l11&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l12-endpoint" aria-hidden="true">#</a> Battery (numeric, l12 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l12</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l12-endpoint" aria-hidden="true">#</a> Climate (l12 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l12&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l12&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l12&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l12&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l12&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l12&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l12-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l12 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l12</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l12-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l12 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l12</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l12-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l12 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l12</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l12&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l12&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l12-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l12 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l12</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l12&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l12&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l12-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l12 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l12</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l12-endpoint" aria-hidden="true">#</a> Output_status (enum, l12 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l12</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l12&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l12-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l12-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l12 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l12</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l12&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l13-endpoint" aria-hidden="true">#</a> Battery (numeric, l13 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l13</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l13-endpoint" aria-hidden="true">#</a> Climate (l13 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l13&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l13&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l13&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l13&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l13&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l13&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l13-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l13 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l13</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l13-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l13 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l13</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l13-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l13 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l13</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l13&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l13&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l13-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l13 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l13</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l13&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l13&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l13-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l13 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l13</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l13-endpoint" aria-hidden="true">#</a> Output_status (enum, l13 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l13</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l13&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l13-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l13-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l13 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l13</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l13&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l14-endpoint" aria-hidden="true">#</a> Battery (numeric, l14 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l14</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l14-endpoint" aria-hidden="true">#</a> Climate (l14 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l14&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l14&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l14&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l14&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l14&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l14&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l14-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l14 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l14</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l14-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l14 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l14</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l14-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l14 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l14</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l14&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l14&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l14-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l14 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l14</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l14&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l14&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l14-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l14 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l14</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l14-endpoint" aria-hidden="true">#</a> Output_status (enum, l14 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l14</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l14&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l14-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l14-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l14 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l14</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l14&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="battery-numeric-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#battery-numeric-l15-endpoint" aria-hidden="true">#</a> Battery (numeric, l15 endpoint)</h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery_l15</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="climate-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#climate-l15-endpoint" aria-hidden="true">#</a> Climate (l15 endpoint)</h3><p>This climate device supports the following features: <code>occupied_heating_setpoint</code>, <code>local_temperature</code>, <code>running_state</code>, <code>system_mode</code>.</p><ul><li><code>occupied_heating_setpoint</code>: Temperature setpoint. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;occupied_heating_setpoint_l15&quot;: VALUE}</code> where <code>VALUE</code> is the °C between <code>5</code> and <code>35</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;occupied_heating_setpoint_l15&quot;: &quot;&quot;}</code>.</li><li><code>local_temperature</code>: Current temperature measured on the device (in °C). To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;local_temperature_l15&quot;: &quot;&quot;}</code>.</li><li><code>system_mode</code>: Mode of this device. To control publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;system_mode_l15&quot;: VALUE}</code> where <code>VALUE</code> is one of: <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_mode_l15&quot;: &quot;&quot;}</code>.</li><li><code>running_state</code>: The current running state. Possible values are: <code>idle</code>, <code>heat</code>. To read send a message to <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;running_state_l15&quot;: &quot;&quot;}</code>.</li></ul><h3 id="abs-min-heat-setpoint-limit-numeric-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-min-heat-setpoint-limit-numeric-l15-endpoint" aria-hidden="true">#</a> Abs_min_heat_setpoint_limit (numeric, l15 endpoint)</h3><p>Absolute min temperature allowed on the device. Value can be found in the published state on the <code>abs_min_heat_setpoint_limit_l15</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="abs-max-heat-setpoint-limit-numeric-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#abs-max-heat-setpoint-limit-numeric-l15-endpoint" aria-hidden="true">#</a> Abs_max_heat_setpoint_limit (numeric, l15 endpoint)</h3><p>Absolute max temperature allowed on the device. Value can be found in the published state on the <code>abs_max_heat_setpoint_limit_l15</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>°C</code>.</p><h3 id="min-heat-setpoint-limit-numeric-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#min-heat-setpoint-limit-numeric-l15-endpoint" aria-hidden="true">#</a> Min_heat_setpoint_limit (numeric, l15 endpoint)</h3><p>Min temperature limit set on the device. Value can be found in the published state on the <code>min_heat_setpoint_limit_l15</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;min_heat_setpoint_limit_l15&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;min_heat_setpoint_limit_l15&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="max-heat-setpoint-limit-numeric-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#max-heat-setpoint-limit-numeric-l15-endpoint" aria-hidden="true">#</a> Max_heat_setpoint_limit (numeric, l15 endpoint)</h3><p>Max temperature limit set on the device. Value can be found in the published state on the <code>max_heat_setpoint_limit_l15</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;max_heat_setpoint_limit_l15&quot;: &quot;&quot;}</code>. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;max_heat_setpoint_limit_l15&quot;: NEW_VALUE}</code>. The minimal value is <code>4</code> and the maximum value is <code>35</code>. The unit of this value is <code>°C</code>.</p><h3 id="setpoint-change-source-enum-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#setpoint-change-source-enum-l15-endpoint" aria-hidden="true">#</a> Setpoint_change_source (enum, l15 endpoint)</h3><p>Value can be found in the published state on the <code>setpoint_change_source_l15</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>manual</code>, <code>schedule</code>, <code>externally</code>.</p><h3 id="output-status-enum-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#output-status-enum-l15-endpoint" aria-hidden="true">#</a> Output_status (enum, l15 endpoint)</h3><p>Danfoss Output Status [Active vs Inactive]). Value can be found in the published state on the <code>output_status_l15</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;output_status_l15&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>inactive</code>, <code>active</code>.</p><h3 id="room-status-code-enum-l15-endpoint" tabindex="-1"><a class="header-anchor" href="#room-status-code-enum-l15-endpoint" aria-hidden="true">#</a> Room_status_code (enum, l15 endpoint)</h3><p>Thermostat status. Value can be found in the published state on the <code>room_status_code_l15</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;room_status_code_l15&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_rt</code>, <code>rt_touch_error</code>, <code>floor_sensor_short_circuit</code>, <code>floor_sensor_disconnected</code>.</p><h3 id="system-status-code-enum-l16-endpoint" tabindex="-1"><a class="header-anchor" href="#system-status-code-enum-l16-endpoint" aria-hidden="true">#</a> System_status_code (enum, l16 endpoint)</h3><p>Regulator Status. Value can be found in the published state on the <code>system_status_code_l16</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_status_code_l16&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>no_error</code>, <code>missing_expansion_board</code>, <code>missing_radio_module</code>, <code>missing_command_module</code>, <code>missing_master_rail</code>, <code>missing_slave_rail_no_1</code>, <code>missing_slave_rail_no_2</code>, <code>pt1000_input_short_circuit</code>, <code>pt1000_input_open_circuit</code>, <code>error_on_one_or_more_output</code>.</p><h3 id="system-status-water-enum-l16-endpoint" tabindex="-1"><a class="header-anchor" href="#system-status-water-enum-l16-endpoint" aria-hidden="true">#</a> System_status_water (enum, l16 endpoint)</h3><p>Water Status of Regulator. Value can be found in the published state on the <code>system_status_water_l16</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;system_status_water_l16&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>hot_water_flow_in_pipes</code>, <code>cool_water_flow_in_pipes</code>.</p><h3 id="multimaster-role-enum-l16-endpoint" tabindex="-1"><a class="header-anchor" href="#multimaster-role-enum-l16-endpoint" aria-hidden="true">#</a> Multimaster_role (enum, l16 endpoint)</h3><p>Regulator role (Master vs Slave). Value can be found in the published state on the <code>multimaster_role_l16</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;multimaster_role_l16&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The possible values are: <code>invalid_unused</code>, <code>master</code>, <code>slave_1</code>, <code>slave_2</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',295),c={},s=(0,o(83744).Z)(c,[["render",function(e,t){const o=(0,i.up)("RouterLink");return(0,i.wg)(),(0,i.iD)(i.HY,null,[d,(0,i._)("p",null,[(0,i._)("em",null,[(0,i.Wm)(o,{to:"/guide/configuration/devices-groups.html#specific-device-options"},{default:(0,i.w5)((()=>[n])),_:1})])]),a],64)}]])},83744:(e,t)=>{t.Z=(e,t)=>{for(const[o,i]of t)e[o]=i;return e}}}]);